BlobDescriptor.blob=<Blob>

ClobDescriptor.clob=<Clob>
ClobDescriptor.null=<null>

DataTypeOther.other=<Other>

DataTypeUnknown.unknown=<UnknownType ({0})>

#
#Missing/changed properties generated by I18n Plugin on Wed Dec 21 21:35:30 CET 2005
#
dataTypeBigDecimal.precisionEceeded=Precision Exceeded: Number of digits in number ({0})\nis greater than allowed in column ({1})
dataTypeBigDecimal.read2=Read
dataTypeBigDecimal.readContentsOnFirstLoad=Read contents when table is first loaded;
dataTypeBigDecimal.scaleEceeded=Scale Exceeded: Number of digits to right of decimal place ({0})\nis greater than allowed in column ({1}).

dataTypeBlob.blobType=BLOB   (SQL type 2004):
dataTypeBlob.read=Read
dataTypeBlob.readOnFirstLoad=Read contents when table is first loaded:
dataTypeBlob.readWhenFocused=Read contents when table cell is focused
dataTypeBlob.readWhenRendered=Read contents when table cell becomes visible
dataTypeBlob.readNever=Do not read contents

dataTypeClob.typeClob_NClob=CLOB   (SQL type 2005) / NCLOB   (SQL type 2011)
dataTypeClob.read=Read
dataTypeClob.readOnFirstLoad=Read contents when table is first loaded:
dataTypeClob.readWhenFocused=Read contents when table cell is focused
dataTypeClob.readWhenRendered=Read contents when table cell becomes visible
dataTypeClob.readNever=Do not read contents
dataTypeClob.newlinesAsbackslashN=Show newlines as \\n within cells


dataTypeDate.allowInexact=allow inexact format on input
dataTypeDate.full=Full ({0})
dataTypeDate.long=Long ({0})
dataTypeDate.medium=Medium ({0})
dataTypeDate.orlocaleIndependent= or locale-dependent format:
dataTypeDate.readDateAsTimestamp=Interpret DATE columns as TIMESTAMP
dataTypeDate.short=Short ({0})
dataTypeDate.typeDate=Date   (SQL type 91)
dataTypeDate.useDefaultFormat=Use default format ({0})
dataTypeOther.readContentsWhenLoaded=Read contents when table is first loaded and display as string
dataTypeOther.sqlOtherType=SQL Other   (SQL type 1111)
dataTypeString.allowLongVarchar=Allow LONGVARCHAR type to be used in WHERE clause
dataTypeString.limitReadOnly=Limit read only on columns with these names:
dataTypeString.limitSize=Limit size of strings read during initial table load to max of:
dataTypeString.newlines=Show newlines as \\n within cells
dataTypeString.typeChar=CHAR, VARCHAR, LONGVARCHAR   (SQL types 1, 12, -1)
dataTypeTime.full=Full ({0})
dataTypeTime.inexact=allow inexact format on input
dataTypeTime.long=Long ({0})
dataTypeTime.medium=Medium ({0})
dataTypeTime.short=Short ({0})
dataTypeTime.typeTime=Time   (SQL type 92)
dataTypeTime.useDefaultFormat=Use default format ({0})
dataTypeTime.useDefaultFormat2= or locale-dependent format:

dateTypeTimestamp.allowInexact=Allow inexact format on input
dateTypeTimestamp.defaultFormat=Use default format 
dataTypeTimestamp.full=Full ({0})
dateTypeTimestamp.generateWhereClause=For internally generated WHERE clauses:
dateTypeTimestamp.jdbcEscape=Use JDBC standard escape format 
dataTypeTimestamp.long=Long ({0})
dataTypeTimestamp.medium=Medium ({0})
dateTypeTimestamp.orLocaleDependent=Use or locale-dependent format:
dataTypeTimestamp.short=Short ({0})
dateTypeTimestamp.stringVersion=Use String version of Timestamp 
dateTypeTimestamp.timestampInWhere=Do not use Timstamp in WHERE clause
dateTypeTimestamp.typeTimestamp=Timestamp   (SQL type 93)

dateTypeTimestamp.useThreeDigitMillis=Always display milliseconds in three digits


dataTypeUnknown.readContentsOnLoad=Read contents when table is first loaded and display as string
dataTypeUnknown.unknownTypes=Unknown DataTypes   (non-standard SQL type codes)


floatingPointBase.typeBigDecimal=FLOAT, REAL, DOUBLE, NUMERIC, DECIMAL (SQL types 6, 7, 8, 2, 3)
floatingPointBase.useDefaultFormat=Use default format ({0})

floatingPointBase.optUseUserDefinedFormat=Use user defined format ({0}), ({1}) with:

floatingPointBase.uselocaleDependendFormat=Use locale-dependent format ({0}), ({1}) with:
floatingPointBase.uselocaleDependendFormat.minDecimalDigits=a) minimum number of decimal digits of (0 means no minimum)
floatingPointBase.uselocaleDependendFormat.maxDecimalDigits=b) maximum number of decimal digits of
dataTypeBlob.useColumnLabelInsteadColumnName=Use column labels instead of column names in result headers
dataTypeGeneral.formatXmlJsonWhenDisplayedInPopupPanel=Format Xml/Json when table data is displayed in detail panel or cell data popup.
dataTypeGeneral.rightAlignNumericTypes=Right align numeric types

dataTypeGeneral.generalType=General (applies to all types)
BigDataToTextareaLoader.loading=Loading...

floatingPointBase.uselocaleDependendFormat.groupingSeparator=Grouping separator
floatingPointBase.uselocaleDependendFormat.decimalSeparator=Decimal separator

LimitReadLengthFeatureUnstable.unknown.table=Couldn't find the table to re-read data from. NOTE: The "Limit read length" feature is inherently unstable. For details see menu File --> Global Preferences --> tab Data types controls --> section CHAR, VARCHAR, LONGVARCHAR
LimitReadLengthFeatureUnstable.some.error=Error occurred when re-reading data from the database. NOTE: The "Limit read length" feature is inherently unstable. For details see menu File --> Global Preferences --> tab Data types controls --> section CHAR, VARCHAR, LONGVARCHAR


LimitReadLengthFeatureUnstable.ui.warning=NOTE: This feature is unstable because it tries to re-query the database for data cells that it generally doesn't know the table of nor generally knows a unique row identifier. This is especially true for SQL-Query results.

DataTypeBlob.readAsStringError=<Error, check logs>


TemporalScriptGenerationPanel.scriptGeneration.label=For script generation:
TemporalScriptGenerationPanel.scriptGeneration.escaped=Use JDBC standard escape format ("{0}")
TemporalScriptGenerationPanel.scriptGeneration.string=Use String version ("{0}")


BinaryTypeRenderResult.MaxBytesReached=Maximum bytes of {0} to show in default cell detail display reached for column {1} ({2})
BinaryTypeRenderResult.StringLenReached=Maximum string length of {0} to show in default cell detail display reached for column {1} ({2})